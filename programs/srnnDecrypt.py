def decryptSRNN(publickey,privateKey,ct):
    d,a,u,r = privateKey
    n,e = publickey[0], publickey[1]

    v = pow(u,(r-a),n)
    m = pow(pow(v,e)*int(ct),d,n)
    return m

def convertToText(m):
    
    pt = ""
    for i in range(0,len(m),3):
        pt += chr(int(m[i:i+3]))
    return pt

def decrypt(ct,publickey,privateKey):
    m = decryptSRNN(publickey,privateKey,ct)
    m = str(m)
    rem = len(m)%3
    rem = 3 - rem
    if rem != 3:
        m = ("0" * rem) + m
    pt = convertToText(m)
    return pt


def mainfn():
    ct = "3710599868771782977297266139474561241041506212484926597760755810162249841878258301810078673585822256718587999532719988837572884271226618320310961236160635"
    publickey = ( 6441632381245105102845303224299619627408379834705757629106109601077650394409978617762745713119887198951106421397380242029327232168914351161709979983086131 , 999 , 3152176747341179562568040467871303599712199674729307246465517672864835591185847393906885762816795807233578005550443470222927467856138299726959553714273847 )
    privateKey = ( 3436826886089730750567113732283981242651317769667836652966522940314702362583015379333796264339456209931355580170031243240707828045728077691598893348298743 , 4053282080514000726349831063834831658728529131638783155142988910503388110932575699753291328169973403929428952556614239518830820699805112490276303800036198 , 2622458188390738571771791018986794271627323567853014283472081055914944002079244683642958540058089316678879311652045682113987892295504195286847718870496508 , 6441632381245105102845303224299619627408379834705757629106109601077650394409816817925820765619356010734379408236137358344215985399028798525154398602158432 )
        
    print(decrypt(ct,publickey,privateKey))


if __name__ == '__main__':
    mainfn()
